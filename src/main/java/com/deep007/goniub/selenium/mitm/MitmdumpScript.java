package com.deep007.goniub.selenium.mitm;

import java.io.File;

import org.apache.commons.io.FileUtils;

public class MitmdumpScript {

	public static final String mitm_flow_pb2_grpc = "# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!\r\n" + 
			"import grpc\r\n" + 
			"\r\n" + 
			"import mitm_flow_pb2 as mitm__flow__pb2\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"class MitmFlowMonitorStub(object):\r\n" + 
			"    \"\"\"Missing associated documentation comment in .proto file\"\"\"\r\n" + 
			"\r\n" + 
			"    def __init__(self, channel):\r\n" + 
			"        \"\"\"Constructor.\r\n" + 
			"\r\n" + 
			"        Args:\r\n" + 
			"            channel: A grpc.Channel.\r\n" + 
			"        \"\"\"\r\n" + 
			"        self.onMitmRequest = channel.unary_unary(\r\n" + 
			"                '/mitm.MitmFlowMonitor/onMitmRequest',\r\n" + 
			"                request_serializer=mitm__flow__pb2.MitmRequest.SerializeToString,\r\n" + 
			"                response_deserializer=mitm__flow__pb2.MitmRequest.FromString,\r\n" + 
			"                )\r\n" + 
			"        self.onMitmResponse = channel.unary_unary(\r\n" + 
			"                '/mitm.MitmFlowMonitor/onMitmResponse',\r\n" + 
			"                request_serializer=mitm__flow__pb2.MitmResponse.SerializeToString,\r\n" + 
			"                response_deserializer=mitm__flow__pb2.MitmResponse.FromString,\r\n" + 
			"                )\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"class MitmFlowMonitorServicer(object):\r\n" + 
			"    \"\"\"Missing associated documentation comment in .proto file\"\"\"\r\n" + 
			"\r\n" + 
			"    def onMitmRequest(self, request, context):\r\n" + 
			"        \"\"\"Missing associated documentation comment in .proto file\"\"\"\r\n" + 
			"        context.set_code(grpc.StatusCode.UNIMPLEMENTED)\r\n" + 
			"        context.set_details('Method not implemented!')\r\n" + 
			"        raise NotImplementedError('Method not implemented!')\r\n" + 
			"\r\n" + 
			"    def onMitmResponse(self, request, context):\r\n" + 
			"        \"\"\"Missing associated documentation comment in .proto file\"\"\"\r\n" + 
			"        context.set_code(grpc.StatusCode.UNIMPLEMENTED)\r\n" + 
			"        context.set_details('Method not implemented!')\r\n" + 
			"        raise NotImplementedError('Method not implemented!')\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"def add_MitmFlowMonitorServicer_to_server(servicer, server):\r\n" + 
			"    rpc_method_handlers = {\r\n" + 
			"            'onMitmRequest': grpc.unary_unary_rpc_method_handler(\r\n" + 
			"                    servicer.onMitmRequest,\r\n" + 
			"                    request_deserializer=mitm__flow__pb2.MitmRequest.FromString,\r\n" + 
			"                    response_serializer=mitm__flow__pb2.MitmRequest.SerializeToString,\r\n" + 
			"            ),\r\n" + 
			"            'onMitmResponse': grpc.unary_unary_rpc_method_handler(\r\n" + 
			"                    servicer.onMitmResponse,\r\n" + 
			"                    request_deserializer=mitm__flow__pb2.MitmResponse.FromString,\r\n" + 
			"                    response_serializer=mitm__flow__pb2.MitmResponse.SerializeToString,\r\n" + 
			"            ),\r\n" + 
			"    }\r\n" + 
			"    generic_handler = grpc.method_handlers_generic_handler(\r\n" + 
			"            'mitm.MitmFlowMonitor', rpc_method_handlers)\r\n" + 
			"    server.add_generic_rpc_handlers((generic_handler,))\r\n" + 
			"\r\n" + 
			"\r\n" + 
			" # This class is part of an EXPERIMENTAL API.\r\n" + 
			"class MitmFlowMonitor(object):\r\n" + 
			"    \"\"\"Missing associated documentation comment in .proto file\"\"\"\r\n" + 
			"\r\n" + 
			"    @staticmethod\r\n" + 
			"    def onMitmRequest(request,\r\n" + 
			"            target,\r\n" + 
			"            options=(),\r\n" + 
			"            channel_credentials=None,\r\n" + 
			"            call_credentials=None,\r\n" + 
			"            compression=None,\r\n" + 
			"            wait_for_ready=None,\r\n" + 
			"            timeout=None,\r\n" + 
			"            metadata=None):\r\n" + 
			"        return grpc.experimental.unary_unary(request, target, '/mitm.MitmFlowMonitor/onMitmRequest',\r\n" + 
			"            mitm__flow__pb2.MitmRequest.SerializeToString,\r\n" + 
			"            mitm__flow__pb2.MitmRequest.FromString,\r\n" + 
			"            options, channel_credentials,\r\n" + 
			"            call_credentials, compression, wait_for_ready, timeout, metadata)\r\n" + 
			"\r\n" + 
			"    @staticmethod\r\n" + 
			"    def onMitmResponse(request,\r\n" + 
			"            target,\r\n" + 
			"            options=(),\r\n" + 
			"            channel_credentials=None,\r\n" + 
			"            call_credentials=None,\r\n" + 
			"            compression=None,\r\n" + 
			"            wait_for_ready=None,\r\n" + 
			"            timeout=None,\r\n" + 
			"            metadata=None):\r\n" + 
			"        return grpc.experimental.unary_unary(request, target, '/mitm.MitmFlowMonitor/onMitmResponse',\r\n" + 
			"            mitm__flow__pb2.MitmResponse.SerializeToString,\r\n" + 
			"            mitm__flow__pb2.MitmResponse.FromString,\r\n" + 
			"            options, channel_credentials,\r\n" + 
			"            call_credentials, compression, wait_for_ready, timeout, metadata)\r\n" + 
			"";
	
	public static final String mitm_flow_pb2 = "# -*- coding: utf-8 -*-\r\n" + 
			"# Generated by the protocol buffer compiler.  DO NOT EDIT!\r\n" + 
			"# source: mitm_flow.proto\r\n" + 
			"\r\n" + 
			"from google.protobuf import descriptor as _descriptor\r\n" + 
			"from google.protobuf import message as _message\r\n" + 
			"from google.protobuf import reflection as _reflection\r\n" + 
			"from google.protobuf import symbol_database as _symbol_database\r\n" + 
			"# @@protoc_insertion_point(imports)\r\n" + 
			"\r\n" + 
			"_sym_db = _symbol_database.Default()\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"DESCRIPTOR = _descriptor.FileDescriptor(\r\n" + 
			"  name='mitm_flow.proto',\r\n" + 
			"  package='mitm',\r\n" + 
			"  syntax='proto3',\r\n" + 
			"  serialized_options=b'\\n(com.deep007.goniub.selenium.mitm.monitorB\\024MitmFlowMonitorProtoP\\001',\r\n" + 
			"  serialized_pb=b'\\n\\x0fmitm_flow.proto\\x12\\x04mitm\\\"A\\n\\x0bMitmRequest\\x12\\x14\\n\\x0cmitmserverId\\x18\\x01 \\x01(\\t\\x12\\x0f\\n\\x07\\x63loudId\\x18\\x02 \\x01(\\t\\x12\\x0b\\n\\x03url\\x18\\x03 \\x01(\\t\\\"S\\n\\x0cMitmResponse\\x12\\x14\\n\\x0cmitmserverId\\x18\\x01 \\x01(\\t\\x12\\x0f\\n\\x07\\x63loudId\\x18\\x02 \\x01(\\t\\x12\\x0b\\n\\x03url\\x18\\x03 \\x01(\\t\\x12\\x0f\\n\\x07\\x63ontent\\x18\\x04 \\x01(\\x0c\\x32\\x86\\x01\\n\\x0fMitmFlowMonitor\\x12\\x37\\n\\ronMitmRequest\\x12\\x11.mitm.MitmRequest\\x1a\\x11.mitm.MitmRequest\\\"\\x00\\x12:\\n\\x0eonMitmResponse\\x12\\x12.mitm.MitmResponse\\x1a\\x12.mitm.MitmResponse\\\"\\x00\\x42\\x42\\n(com.deep007.goniub.selenium.mitm.monitorB\\x14MitmFlowMonitorProtoP\\x01\\x62\\x06proto3'\r\n" + 
			")\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"_MITMREQUEST = _descriptor.Descriptor(\r\n" + 
			"  name='MitmRequest',\r\n" + 
			"  full_name='mitm.MitmRequest',\r\n" + 
			"  filename=None,\r\n" + 
			"  file=DESCRIPTOR,\r\n" + 
			"  containing_type=None,\r\n" + 
			"  fields=[\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='mitmserverId', full_name='mitm.MitmRequest.mitmserverId', index=0,\r\n" + 
			"      number=1, type=9, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\".decode('utf-8'),\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='cloudId', full_name='mitm.MitmRequest.cloudId', index=1,\r\n" + 
			"      number=2, type=9, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\".decode('utf-8'),\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='url', full_name='mitm.MitmRequest.url', index=2,\r\n" + 
			"      number=3, type=9, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\".decode('utf-8'),\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"  ],\r\n" + 
			"  extensions=[\r\n" + 
			"  ],\r\n" + 
			"  nested_types=[],\r\n" + 
			"  enum_types=[\r\n" + 
			"  ],\r\n" + 
			"  serialized_options=None,\r\n" + 
			"  is_extendable=False,\r\n" + 
			"  syntax='proto3',\r\n" + 
			"  extension_ranges=[],\r\n" + 
			"  oneofs=[\r\n" + 
			"  ],\r\n" + 
			"  serialized_start=25,\r\n" + 
			"  serialized_end=90,\r\n" + 
			")\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"_MITMRESPONSE = _descriptor.Descriptor(\r\n" + 
			"  name='MitmResponse',\r\n" + 
			"  full_name='mitm.MitmResponse',\r\n" + 
			"  filename=None,\r\n" + 
			"  file=DESCRIPTOR,\r\n" + 
			"  containing_type=None,\r\n" + 
			"  fields=[\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='mitmserverId', full_name='mitm.MitmResponse.mitmserverId', index=0,\r\n" + 
			"      number=1, type=9, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\".decode('utf-8'),\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='cloudId', full_name='mitm.MitmResponse.cloudId', index=1,\r\n" + 
			"      number=2, type=9, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\".decode('utf-8'),\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='url', full_name='mitm.MitmResponse.url', index=2,\r\n" + 
			"      number=3, type=9, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\".decode('utf-8'),\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"    _descriptor.FieldDescriptor(\r\n" + 
			"      name='content', full_name='mitm.MitmResponse.content', index=3,\r\n" + 
			"      number=4, type=12, cpp_type=9, label=1,\r\n" + 
			"      has_default_value=False, default_value=b\"\",\r\n" + 
			"      message_type=None, enum_type=None, containing_type=None,\r\n" + 
			"      is_extension=False, extension_scope=None,\r\n" + 
			"      serialized_options=None, file=DESCRIPTOR),\r\n" + 
			"  ],\r\n" + 
			"  extensions=[\r\n" + 
			"  ],\r\n" + 
			"  nested_types=[],\r\n" + 
			"  enum_types=[\r\n" + 
			"  ],\r\n" + 
			"  serialized_options=None,\r\n" + 
			"  is_extendable=False,\r\n" + 
			"  syntax='proto3',\r\n" + 
			"  extension_ranges=[],\r\n" + 
			"  oneofs=[\r\n" + 
			"  ],\r\n" + 
			"  serialized_start=92,\r\n" + 
			"  serialized_end=175,\r\n" + 
			")\r\n" + 
			"\r\n" + 
			"DESCRIPTOR.message_types_by_name['MitmRequest'] = _MITMREQUEST\r\n" + 
			"DESCRIPTOR.message_types_by_name['MitmResponse'] = _MITMRESPONSE\r\n" + 
			"_sym_db.RegisterFileDescriptor(DESCRIPTOR)\r\n" + 
			"\r\n" + 
			"MitmRequest = _reflection.GeneratedProtocolMessageType('MitmRequest', (_message.Message,), {\r\n" + 
			"  'DESCRIPTOR' : _MITMREQUEST,\r\n" + 
			"  '__module__' : 'mitm_flow_pb2'\r\n" + 
			"  # @@protoc_insertion_point(class_scope:mitm.MitmRequest)\r\n" + 
			"  })\r\n" + 
			"_sym_db.RegisterMessage(MitmRequest)\r\n" + 
			"\r\n" + 
			"MitmResponse = _reflection.GeneratedProtocolMessageType('MitmResponse', (_message.Message,), {\r\n" + 
			"  'DESCRIPTOR' : _MITMRESPONSE,\r\n" + 
			"  '__module__' : 'mitm_flow_pb2'\r\n" + 
			"  # @@protoc_insertion_point(class_scope:mitm.MitmResponse)\r\n" + 
			"  })\r\n" + 
			"_sym_db.RegisterMessage(MitmResponse)\r\n" + 
			"\r\n" + 
			"\r\n" + 
			"DESCRIPTOR._options = None\r\n" + 
			"\r\n" + 
			"_MITMFLOWMONITOR = _descriptor.ServiceDescriptor(\r\n" + 
			"  name='MitmFlowMonitor',\r\n" + 
			"  full_name='mitm.MitmFlowMonitor',\r\n" + 
			"  file=DESCRIPTOR,\r\n" + 
			"  index=0,\r\n" + 
			"  serialized_options=None,\r\n" + 
			"  serialized_start=178,\r\n" + 
			"  serialized_end=312,\r\n" + 
			"  methods=[\r\n" + 
			"  _descriptor.MethodDescriptor(\r\n" + 
			"    name='onMitmRequest',\r\n" + 
			"    full_name='mitm.MitmFlowMonitor.onMitmRequest',\r\n" + 
			"    index=0,\r\n" + 
			"    containing_service=None,\r\n" + 
			"    input_type=_MITMREQUEST,\r\n" + 
			"    output_type=_MITMREQUEST,\r\n" + 
			"    serialized_options=None,\r\n" + 
			"  ),\r\n" + 
			"  _descriptor.MethodDescriptor(\r\n" + 
			"    name='onMitmResponse',\r\n" + 
			"    full_name='mitm.MitmFlowMonitor.onMitmResponse',\r\n" + 
			"    index=1,\r\n" + 
			"    containing_service=None,\r\n" + 
			"    input_type=_MITMRESPONSE,\r\n" + 
			"    output_type=_MITMRESPONSE,\r\n" + 
			"    serialized_options=None,\r\n" + 
			"  ),\r\n" + 
			"])\r\n" + 
			"_sym_db.RegisterServiceDescriptor(_MITMFLOWMONITOR)\r\n" + 
			"\r\n" + 
			"DESCRIPTOR.services_by_name['MitmFlowMonitor'] = _MITMFLOWMONITOR\r\n" + 
			"\r\n" + 
			"# @@protoc_insertion_point(module_scope)\r\n" + 
			"";
	
	static {
		try {
			File mitm_flow_pb2_grpc_file = new File("mitm_flow_pb2_grpc.py");
			FileUtils.write(mitm_flow_pb2_grpc_file, mitm_flow_pb2_grpc, false);
			File mitm_flow_pb2_file = new File("mitm_flow_pb2.py");
			FileUtils.write(mitm_flow_pb2_file, mitm_flow_pb2, false);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public static void init() {}
}
